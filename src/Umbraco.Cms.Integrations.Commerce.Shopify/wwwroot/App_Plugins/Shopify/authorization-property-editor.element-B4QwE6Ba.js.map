{"version":3,"file":"authorization-property-editor.element-B4QwE6Ba.js","sources":["../../../Client/src/config/authorization/authorization-property-editor.element.ts"],"sourcesContent":["import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, customElement, html, property, state, when } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { SHOPIFY_CONTEXT_TOKEN } from \"../../context/shopify.context\";\r\nimport { ConfigDescription, ShopifyOAuthSetup, type ShopifyServiceStatus } from \"../../models/shopify-service.model\";\r\nimport { OAuthRequestDtoModel } from \"../../../generated\";\r\nimport { UMB_NOTIFICATION_CONTEXT, type UmbNotificationColor } from \"@umbraco-cms/backoffice/notification\";\r\n\r\nconst elementName = \"shopify-authorization\";\r\n\r\n@customElement(elementName)\r\nexport class ShopifyAuthorizationElement extends UmbElementMixin(LitElement){\r\n    #shopifyContext!: typeof SHOPIFY_CONTEXT_TOKEN.TYPE;\r\n\r\n    @state()\r\n    private _serviceStatus: ShopifyServiceStatus = {\r\n        isValid: false,\r\n        type: \"\",\r\n        description: \"\",\r\n        useOAuth: false\r\n    };\r\n\r\n    @state()\r\n    private _oauthSetup: ShopifyOAuthSetup = {\r\n        isConnected: false,\r\n        isAccessTokenExpired: false,\r\n        isAccessTokenValid: false\r\n    };\r\n\r\n    @property({ type: String })\r\n    public value = \"\";\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(SHOPIFY_CONTEXT_TOKEN, (context) => {\r\n            this.#shopifyContext = context;\r\n        });\r\n    }\r\n\r\n    async connectedCallback() {\r\n        super.connectedCallback();\r\n        await this.#checkApiConfiguration();\r\n    }\r\n\r\n    async #checkApiConfiguration() {\r\n        const { data } = await this.#shopifyContext.checkConfiguration();\r\n        if (!data || !data.type?.value) return;\r\n\r\n        this._serviceStatus = {\r\n            isValid: data.isValid,\r\n            type: data.type.value,\r\n            description: this.#getDescription(data.type.value),\r\n            useOAuth: data.isValid && data.type.value === \"OAuth\"\r\n        }\r\n\r\n        if (this._serviceStatus.useOAuth) {\r\n            await this.#validateOAuthSetup();\r\n        }\r\n\r\n        if (!data!.isValid) {\r\n            this._showError(\"Invalid setup. Please review the API/OAuth settings.\");\r\n        }\r\n    }\r\n\r\n    async #validateOAuthSetup() {\r\n        const { data } = await this.#shopifyContext.validateAccessToken();\r\n        if (data) {\r\n            this._oauthSetup = {\r\n                isConnected: data.isValid,\r\n                isAccessTokenExpired: data.isExpired,\r\n                isAccessTokenValid: data.isValid\r\n            }\r\n\r\n            if (this._oauthSetup.isConnected && this._oauthSetup.isAccessTokenValid) {\r\n                this._serviceStatus.description = ConfigDescription.oauthConnected;\r\n            }\r\n\r\n            if (this._oauthSetup.isAccessTokenExpired) {\r\n                await this.#shopifyContext.refreshAccessToken();\r\n            }\r\n        }\r\n    }\r\n\r\n    #getDescription(type: string) {\r\n        switch (type) {\r\n            case \"API\": return ConfigDescription.api;\r\n            case \"OAuth\": return ConfigDescription.oauth;\r\n            case \"OAuthConnected\": return ConfigDescription.oauthConnected;\r\n            default: return ConfigDescription.none;\r\n        }\r\n    }\r\n\r\n    private async _showSuccess(message: string) {\r\n        await this._showMessage(message, \"positive\");\r\n    }\r\n\r\n    private async _showError(message: string) {\r\n        await this._showMessage(message, \"danger\");\r\n    }\r\n\r\n    private async _showMessage(message: string, color: UmbNotificationColor) {\r\n        const notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n        notificationContext?.peek(color, {\r\n            data: { message },\r\n        });\r\n    }\r\n\r\n    async #connectButtonClick(){\r\n        window.addEventListener(\"message\", async (event: MessageEvent) => {\r\n            if (event.data.type === \"hubspot:oauth:success\") {\r\n\r\n                const oauthRequestDtoModel: OAuthRequestDtoModel = {\r\n                    code: event.data.code\r\n                };\r\n\r\n                const { data } = await this.#shopifyContext.getAccessToken(oauthRequestDtoModel);\r\n                if (!data) return;\r\n\r\n                if (data.startsWith(\"Error:\")) {\r\n                    this._showError(data);\r\n                } else {\r\n                    this._oauthSetup = {\r\n                        isConnected: true\r\n                    };\r\n                    this._serviceStatus.description = ConfigDescription.oauthConnected;\r\n                    this._showSuccess(\"OAuth Connected\");\r\n\r\n                }\r\n\r\n            }\r\n        }, false);\r\n\r\n        const { data } = await this.#shopifyContext.getAuthorizationUrl();\r\n        if (!data) return;\r\n\r\n        window.open(data, \"Authorize\", \"width=900,height=700,modal=yes,alwaysRaised=yes\");\r\n    }\r\n\r\n    async #revokeButtonClick(){\r\n        await this.#shopifyContext.revokeAccessToken();\r\n\r\n        this._oauthSetup = {\r\n            isConnected: false\r\n        };\r\n        this._serviceStatus.description = ConfigDescription.none;\r\n        this._showSuccess(\"OAuth connection revoked.\");\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <div>\r\n                <p>${this._serviceStatus.description}</p>\r\n            </div>\r\n            ${when(this._serviceStatus.useOAuth, () => \r\n                html`\r\n                <div>\r\n                    <uui-button \r\n                        look=\"primary\" \r\n                        label=\"Connect\" \r\n                        ?disabled=${this._oauthSetup.isConnected} \r\n                        .onclick=${this.#connectButtonClick()}></uui-button>\r\n                    <uui-button \r\n                        color=\"danger\" \r\n                        look=\"secondary\" \r\n                        label=\"Revoke\" \r\n                        ?disabled=${!this._oauthSetup.isConnected} \r\n                        .onclick=${this.#revokeButtonClick()}></uui-button>\r\n                </div>\r\n                `)}\r\n            \r\n        `;\r\n    }\r\n}\r\n\r\nexport default ShopifyAuthorizationElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: ShopifyAuthorizationElement;\r\n\t}\r\n}"],"names":["_shopifyContext","_ShopifyAuthorizationElement_instances","checkApiConfiguration_fn","validateOAuthSetup_fn","getDescription_fn","connectButtonClick_fn","revokeButtonClick_fn","elementName","ShopifyAuthorizationElement","UmbElementMixin","LitElement","__privateAdd","SHOPIFY_CONTEXT_TOKEN","context","__privateSet","__privateMethod","message","color","notificationContext","UMB_NOTIFICATION_CONTEXT","html","when","data","__privateGet","_a","ConfigDescription","type","event","oauthRequestDtoModel","__decorateClass","state","property","customElement","ShopifyAuthorizationElement$1"],"mappings":"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"}