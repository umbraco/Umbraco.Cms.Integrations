{"version":3,"file":"index-DM1PFbxq.js","sources":["../../../Client/src/context/manifests.ts","../../../Client/src/config/amount/manifests.ts","../../../Client/src/config/authorization/manifests.ts","../../../Client/src/property-editor/manifests.ts","../../../Client/src/modal/manifests.ts","../../../Client/generated/core/OpenAPI.ts","../../../Client/src/index.ts"],"sourcesContent":["import type { ManifestGlobalContext } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst contextManifest: ManifestGlobalContext = {\r\n    type: \"globalContext\",\r\n    alias: \"shopify.context\",\r\n    name: \"Shopify Context\",\r\n    js: () => import(\"./shopify.context\")\r\n};\r\n\r\nexport const manifest = contextManifest;","import type { ManifestPropertyEditorUi } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nexport const manifests : ManifestPropertyEditorUi = {\r\n    type: 'propertyEditorUi',\r\n\talias: 'Shopify.PropertyEditorUi.Amount',\r\n\tname: 'Shopify Product Picker Amount Setting',\r\n\telement: () => import('./amount-property-editor.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Amount',\r\n\t\ticon: 'icon-autofill',\r\n\t\tgroup: 'common',\r\n    }\r\n};","import type { ManifestPropertyEditorUi } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nexport const manifests : ManifestPropertyEditorUi = {\r\n    type: 'propertyEditorUi',\r\n    alias: 'Shopify.PropertyEditorUi.Authorization',\r\n    name: 'Shopify Product Picker Authorization Setting',\r\n    element: () => import('./authorization-property-editor.element.js'),\r\n    meta: {\r\n        label: 'Authorization',\r\n        icon: 'icon-autofill',\r\n        group: 'common',\r\n    }\r\n}","import { ManifestTypes, type ManifestPropertyEditorUi } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { manifests as amountManifest } from \"../config/amount/manifests.js\";\r\nimport { manifests as authorizationManifest } from \"../config/authorization/manifests.js\";\r\n\r\nexport const propertyEditorUiManifest : ManifestPropertyEditorUi = {\r\n    type: \"propertyEditorUi\",\r\n    alias: \"Shopify.PropertyEditorUi.ProductPicker\",\r\n    name: \"Shopify Product Picker Property Editor UI\",\r\n    js: () => import(\"./shopify-product-picker-property-editor.element.js\"),\r\n    elementName: \"shopify-product-picker\",\r\n    meta: {\r\n        label: \"Shopify Product Picker\",\r\n        icon: \"icon-shopping-basket-alt\",\r\n        group: \"pickers\",\r\n\t\tpropertyEditorSchemaAlias: 'Shopify.ProductPicker',\r\n        settings:{\r\n            properties:[\r\n                {\r\n                    alias: 'authorization',\r\n\t\t\t\t\tlabel: 'Authorization',\r\n\t\t\t\t\tdescription: 'Authorize your Shopify connection.',\r\n\t\t\t\t\tpropertyEditorUiAlias: 'Shopify.PropertyEditorUi.Authorization',\r\n                },\r\n                {\r\n                    alias: 'amount',\r\n\t\t\t\t\tlabel: 'Amount',\r\n\t\t\t\t\tdescription: 'Set a required range of items selected.',\r\n\t\t\t\t\tpropertyEditorUiAlias: 'Shopify.PropertyEditorUi.Amount',\r\n                }\r\n            ]\r\n        }\r\n    }\r\n};\r\n\r\nexport const manifests : Array<ManifestTypes> = [\r\n    propertyEditorUiManifest,\r\n    amountManifest,\r\n    authorizationManifest\r\n];","import type { ManifestModal } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nexport const manifest: ManifestModal = {\r\n    type: \"modal\",\r\n    alias: \"Shopify.Modal\",\r\n    name: \"Shopify Modal\",\r\n    js: () => import(\"./shopify-modal.element\")\r\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","import type { UmbEntryPointOnInit } from \"@umbraco-cms/backoffice/extension-api\";\r\nimport { UMB_AUTH_CONTEXT } from \"@umbraco-cms/backoffice/auth\";\r\nimport { manifest as shopifyContext } from \"./context/manifests\";\r\nimport { manifests as picker } from \"./property-editor/manifests.js\";\r\nimport { manifest as shopifyModal } from \"./modal/manifests.js\";\r\nimport { OpenAPI } from \"@umbraco-integrations/shopify/generated\";\r\n\r\nexport const onInit: UmbEntryPointOnInit = (host, extensionRegistry) => {\r\n    extensionRegistry.registerMany([\r\n        ...picker,\r\n        shopifyModal,\r\n        shopifyContext\r\n    ]);\r\n  \r\n    host.consumeContext(UMB_AUTH_CONTEXT, async (instance) => {\r\n      const umbOpenApi = instance.getOpenApiConfiguration();\r\n      OpenAPI.TOKEN = umbOpenApi.token;\r\n      OpenAPI.BASE = umbOpenApi.base;\r\n      OpenAPI.WITH_CREDENTIALS = true;\r\n    });\r\n  };"],"names":["contextManifest","manifest","manifests","propertyEditorUiManifest","amountManifest","authorizationManifest","Interceptors","fn","index","OpenAPI","onInit","host","extensionRegistry","picker","shopifyModal","shopifyContext","UMB_AUTH_CONTEXT","instance","umbOpenApi"],"mappings":";AAEA,MAAMA,IAAyC;AAAA,EAC3C,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,+BAAmB;AACxC,GAEaC,IAAWD,GCPXE,IAAuC;AAAA,EAChD,MAAM;AAAA,EACT,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS,MAAM,OAAO,8CAAqC;AAAA,EAC3D,MAAM;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,EACL;AACJ,GCVaA,IAAuC;AAAA,EAChD,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS,MAAM,OAAO,qDAA4C;AAAA,EAClE,MAAM;AAAA,IACF,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,EACX;AACJ,GCRaC,IAAsD;AAAA,EAC/D,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,8DAAqD;AAAA,EACtE,aAAa;AAAA,EACb,MAAM;AAAA,IACF,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACb,2BAA2B;AAAA,IACrB,UAAS;AAAA,MACL,YAAW;AAAA,QACP;AAAA,UACI,OAAO;AAAA,UACtB,OAAO;AAAA,UACP,aAAa;AAAA,UACb,uBAAuB;AAAA,QACZ;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACtB,OAAO;AAAA,UACP,aAAa;AAAA,UACb,uBAAuB;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,GAEaD,IAAmC;AAAA,EAC5CC;AAAA,EACAC;AAAAA,EACAC;AACJ,GCpCaJ,IAA0B;AAAA,EACnC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,qCAAyB;AAC9C;ACDO,MAAMK,EAAgB;AAAA,EAG3B,cAAc;AACZ,SAAK,OAAO;EACd;AAAA,EAEA,MAAMC,GAAyB;AAC7B,UAAMC,IAAQ,KAAK,KAAK,QAAQD,CAAE;AAClC,IAAIC,MAAU,OACZ,KAAK,OAAO,CAAC,GAAG,KAAK,KAAK,MAAM,GAAGA,CAAK,GAAG,GAAG,KAAK,KAAK,MAAMA,IAAQ,CAAC,CAAC;AAAA,EAE5E;AAAA,EAEA,IAAID,GAAyB;AAC3B,SAAK,OAAO,CAAC,GAAG,KAAK,MAAMA,CAAE;AAAA,EAC/B;AACF;AAkBO,MAAME,IAAyB;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,aAAa;AAAA,EACb,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,cAAc;AAAA,IACb,SAAS,IAAIH,EAAa;AAAA,IAC1B,UAAU,IAAIA,EAAa;AAAA,EAC5B;AACD,GChDaI,IAA8B,CAACC,GAAMC,MAAsB;AACpE,EAAAA,EAAkB,aAAa;AAAA,IAC3B,GAAGC;AAAAA,IACHC;AAAAA,IACAC;AAAAA,EAAA,CACH,GAEIJ,EAAA,eAAeK,GAAkB,OAAOC,MAAa;AAClD,UAAAC,IAAaD,EAAS;AAC5B,IAAAR,EAAQ,QAAQS,EAAW,OAC3BT,EAAQ,OAAOS,EAAW,MAC1BT,EAAQ,mBAAmB;AAAA,EAAA,CAC5B;AACH;"}