// This file is auto-generated by @hey-api/openapi-ts

export type ConfigurationTypeModel = {
    readonly value: string;
};

export type EditorSettingsModelReadable = {
    isValid: boolean;
    type: ConfigurationTypeModel;
};

export type EditorSettingsModelWritable = {
    isValid: boolean;
};

export enum EventMessageTypeModel {
    DEFAULT = 'Default',
    INFO = 'Info',
    ERROR = 'Error',
    SUCCESS = 'Success',
    WARNING = 'Warning'
}

export type NotificationHeaderModel = {
    message: string;
    category: string;
    type: EventMessageTypeModel;
};

export type OAuthRequestDtoModel = {
    code: string;
};

export type ProductDtoModel = {
    id: number;
    title: string;
    body_html: string;
    vendor: string;
    status: string;
    tags: string;
    variants: Array<ProductVariantDtoModel>;
    image: ProductImageDtoModel;
    product_type: string;
    published_scope: string;
    handle: string;
};

export type ProductImageDtoModel = {
    src: string;
    alt: string;
};

export type ProductVariantDtoModel = {
    price: string;
    sku: string;
    position: number;
    barcode: string;
    inventory_quantity: number;
    taxable: boolean;
};

export type ProductsListDtoModel = {
    products: Array<ProductDtoModel>;
    totalPages: number;
};

export type RequestDtoModel = {
    ids: Array<number>;
};

export type ResponseDtoProductsListDtoModel = {
    isValid: boolean;
    nextPageInfo: string;
    previousPageInfo: string;
    isExpired: boolean;
    result: ProductsListDtoModel;
    message: string;
    skip: number;
    take: number;
};

export type PostAccessTokenData = {
    body?: OAuthRequestDtoModel;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/access-token';
};

export type PostAccessTokenErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type PostAccessTokenResponses = {
    /**
     * OK
     */
    200: string;
};

export type PostAccessTokenResponse = PostAccessTokenResponses[keyof PostAccessTokenResponses];

export type GetAuthorizationUrlData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/authorization-url';
};

export type GetAuthorizationUrlErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetAuthorizationUrlResponses = {
    /**
     * OK
     */
    200: string;
};

export type GetAuthorizationUrlResponse = GetAuthorizationUrlResponses[keyof GetAuthorizationUrlResponses];

export type GetCheckConfigurationData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/check-configuration';
};

export type GetCheckConfigurationErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetCheckConfigurationResponses = {
    /**
     * OK
     */
    200: EditorSettingsModelReadable;
};

export type GetCheckConfigurationResponse = GetCheckConfigurationResponses[keyof GetCheckConfigurationResponses];

export type GetListData = {
    body?: never;
    path?: never;
    query?: {
        pageInfo?: string;
    };
    url: '/umbraco/shopify/management/api/v1/list';
};

export type GetListErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetListResponses = {
    /**
     * OK
     */
    200: ResponseDtoProductsListDtoModel;
};

export type GetListResponse = GetListResponses[keyof GetListResponses];

export type PostListByIdsData = {
    body?: RequestDtoModel;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/list-by-ids';
};

export type PostListByIdsErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type PostListByIdsResponses = {
    /**
     * OK
     */
    200: ResponseDtoProductsListDtoModel;
};

export type PostListByIdsResponse = PostListByIdsResponses[keyof PostListByIdsResponses];

export type PostRefreshAccessTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/refresh-access-token';
};

export type PostRefreshAccessTokenErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type PostRefreshAccessTokenResponses = {
    /**
     * OK
     */
    200: string;
};

export type PostRefreshAccessTokenResponse = PostRefreshAccessTokenResponses[keyof PostRefreshAccessTokenResponses];

export type PostRevokeAccessTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/revoke-access-token';
};

export type PostRevokeAccessTokenErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type PostRevokeAccessTokenResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetTotalPagesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/total-pages';
};

export type GetTotalPagesErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetTotalPagesResponses = {
    /**
     * OK
     */
    200: number;
};

export type GetTotalPagesResponse = GetTotalPagesResponses[keyof GetTotalPagesResponses];

export type GetValidateAccessTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/shopify/management/api/v1/validate-access-token';
};

export type GetValidateAccessTokenErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
};

export type GetValidateAccessTokenResponses = {
    /**
     * OK
     */
    200: ResponseDtoProductsListDtoModel;
};

export type GetValidateAccessTokenResponse = GetValidateAccessTokenResponses[keyof GetValidateAccessTokenResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:30450' | (string & {});
};