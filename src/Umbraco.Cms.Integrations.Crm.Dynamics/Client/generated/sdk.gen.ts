// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetFormsData, GetFormsResponse, PostFormsAccessTokenData, PostFormsAccessTokenResponse, GetFormsAuthorizationUrlData, GetFormsAuthorizationUrlResponse, GetFormsEmbedCodeData, GetFormsEmbedCodeResponse, GetFormsOauthConfigurationData, GetFormsOauthConfigurationResponse, DeleteFormsRevokeAccessTokenData, DeleteFormsRevokeAccessTokenResponse, GetFormsSystemUserFullnameData, GetFormsSystemUserFullnameResponse, GetUmbracoApiDynamicsAuthorizationData, GetUmbracoApiDynamicsAuthorizationResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class DynamicsService {
    public static getForms<ThrowOnError extends boolean = true>(options?: Options<GetFormsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetFormsResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms',
            ...options
        });
    }
    
    public static postFormsAccessToken<ThrowOnError extends boolean = true>(options?: Options<PostFormsAccessTokenData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostFormsAccessTokenResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms/access-token',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static getFormsAuthorizationUrl<ThrowOnError extends boolean = true>(options?: Options<GetFormsAuthorizationUrlData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetFormsAuthorizationUrlResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms/authorization-url',
            ...options
        });
    }
    
    public static getFormsEmbedCode<ThrowOnError extends boolean = true>(options?: Options<GetFormsEmbedCodeData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetFormsEmbedCodeResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms/embed-code',
            ...options
        });
    }
    
    public static getFormsOauthConfiguration<ThrowOnError extends boolean = true>(options?: Options<GetFormsOauthConfigurationData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetFormsOauthConfigurationResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms/oauth-configuration',
            ...options
        });
    }
    
    public static deleteFormsRevokeAccessToken<ThrowOnError extends boolean = true>(options?: Options<DeleteFormsRevokeAccessTokenData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).delete<DeleteFormsRevokeAccessTokenResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms/revoke-access-token',
            ...options
        });
    }
    
    public static getFormsSystemUserFullname<ThrowOnError extends boolean = true>(options?: Options<GetFormsSystemUserFullnameData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetFormsSystemUserFullnameResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/dynamics/management/api/v1/forms/system-user-fullname',
            ...options
        });
    }
    
}

export class V1Service {
    public static getUmbracoApiDynamicsAuthorization<ThrowOnError extends boolean = true>(options?: Options<GetUmbracoApiDynamicsAuthorizationData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetUmbracoApiDynamicsAuthorizationResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/api/dynamics/authorization',
            ...options
        });
    }
    
}