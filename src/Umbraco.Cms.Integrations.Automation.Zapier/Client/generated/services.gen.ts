// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { CheckFormsExtensionInstalledResponse, GetContentByContentTypeData, GetContentByContentTypeResponse, GetContentTypesResponse, UpdatePreferencesData, UpdatePreferencesResponse, GetAllResponse, ValidateData, ValidateResponse } from './types.gen';

export class ZapierService {
    /**
     * @returns boolean OK
     * @throws ApiError
     */
    public static checkFormsExtensionInstalled(): CancelablePromise<CheckFormsExtensionInstalledResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/zapier/management/api/v1/check-form-extension'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.alias
     * @returns string OK
     * @throws ApiError
     */
    public static getContentByContentType(data: GetContentByContentTypeData): CancelablePromise<GetContentByContentTypeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/zapier/management/api/v1/content-type/{alias}/content',
            path: {
                alias: data.alias
            },
            errors: {
                401: 'Unauthorized'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getContentTypes(): CancelablePromise<GetContentTypesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/zapier/management/api/v1/content-types',
            errors: {
                401: 'Unauthorized'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns boolean OK
     * @throws ApiError
     */
    public static updatePreferences(data: UpdatePreferencesData = {}): CancelablePromise<UpdatePreferencesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/zapier/management/api/v1/subscription',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad Request',
                401: 'Unauthorized'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getAll(): CancelablePromise<GetAllResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/zapier/management/api/v1/subscription-hooks'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static validate(data: ValidateData = {}): CancelablePromise<ValidateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/zapier/management/api/v1/validate-user',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}