// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetContentTypesData, GetContentTypesResponse, GetSearchContentTypeIndexByIdData, GetSearchContentTypeIndexByIdResponse, GetIndicesData, GetIndicesResponse, PostSaveIndexData, PostSaveIndexResponse, DeleteSearchIndexData, DeleteSearchIndexResponse, GetSearchIndexByIdData, GetSearchIndexByIdResponse, GetSearchIndexData, GetSearchIndexResponse, PostBuildSearchIndexData, PostBuildSearchIndexResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class AlgoliaSearchService {
    public static getContentTypes<ThrowOnError extends boolean = true>(options?: Options<GetContentTypesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetContentTypesResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/content-type',
            ...options
        });
    }
    
    public static getSearchContentTypeIndexById<ThrowOnError extends boolean = true>(options: Options<GetSearchContentTypeIndexByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetSearchContentTypeIndexByIdResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/content-type/index/{id}',
            ...options
        });
    }
    
    public static getIndices<ThrowOnError extends boolean = true>(options?: Options<GetIndicesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetIndicesResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/index',
            ...options
        });
    }
    
    public static postSaveIndex<ThrowOnError extends boolean = true>(options?: Options<PostSaveIndexData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostSaveIndexResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/index',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static deleteSearchIndex<ThrowOnError extends boolean = true>(options: Options<DeleteSearchIndexData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteSearchIndexResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/index/{id}',
            ...options
        });
    }
    
    public static getSearchIndexById<ThrowOnError extends boolean = true>(options: Options<GetSearchIndexByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetSearchIndexByIdResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/index/{id}',
            ...options
        });
    }
    
    public static getSearchIndex<ThrowOnError extends boolean = true>(options: Options<GetSearchIndexData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetSearchIndexResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/index/{indexId}/search',
            ...options
        });
    }
    
    public static postBuildSearchIndex<ThrowOnError extends boolean = true>(options?: Options<PostBuildSearchIndexData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostBuildSearchIndexResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/algolia-search/management/api/v1/search/index/build',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}