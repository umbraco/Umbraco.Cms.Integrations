// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetContentTypesResponse, GetContentTypesByIndexIdData, GetContentTypesByIndexIdResponse, GetIndicesResponse, SaveIndexData, SaveIndexResponse, DeleteIndexData, DeleteIndexResponse, GetIndexByIdData, GetIndexByIdResponse, SearchData, SearchResponse, BuildIndexData, BuildIndexResponse } from './types.gen';

export class AlgoliaSearchService {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getContentTypes(): CancelablePromise<GetContentTypesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/algolia-search/management/api/v1/search/content-type'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown OK
     * @throws ApiError
     */
    public static getContentTypesByIndexId(data: GetContentTypesByIndexIdData): CancelablePromise<GetContentTypesByIndexIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/algolia-search/management/api/v1/search/content-type/index/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getIndices(): CancelablePromise<GetIndicesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/algolia-search/management/api/v1/search/index'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static saveIndex(data: SaveIndexData = {}): CancelablePromise<SaveIndexResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/algolia-search/management/api/v1/search/index',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown OK
     * @throws ApiError
     */
    public static deleteIndex(data: DeleteIndexData): CancelablePromise<DeleteIndexResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/umbraco/algolia-search/management/api/v1/search/index/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown OK
     * @throws ApiError
     */
    public static getIndexById(data: GetIndexByIdData): CancelablePromise<GetIndexByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/algolia-search/management/api/v1/search/index/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.indexId
     * @param data.query
     * @returns unknown OK
     * @throws ApiError
     */
    public static search(data: SearchData): CancelablePromise<SearchResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/algolia-search/management/api/v1/search/index/{indexId}/search',
            path: {
                indexId: data.indexId
            },
            query: {
                query: data.query
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static buildIndex(data: BuildIndexData = {}): CancelablePromise<BuildIndexResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/algolia-search/management/api/v1/search/index/build',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}