{"version":3,"file":"algolia-dashboard-overview-CNkcX1cx.js","sources":["../../../Client/src/dashboard/search-management-dashboard/views/algolia-dashboard-overview.ts"],"sourcesContent":["import {\r\n    LitElement,\r\n    html,\r\n    css,\r\n    customElement,\r\n    state,\r\n    nothing\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\n\r\nimport { UMB_MODAL_MANAGER_CONTEXT, UMB_CONFIRM_MODAL } from \"@umbraco-cms/backoffice/modal\";\r\nimport {    \r\n    UMB_NOTIFICATION_CONTEXT,\r\n} from \"@umbraco-cms/backoffice/notification\";\r\n\r\nimport {\r\n    IndexConfigurationModel,\r\n    ResultModel\r\n} from \"@umbraco-integrations/algolia/generated\";\r\nimport AlgoliaIndexContext, { ALGOLIA_CONTEXT_TOKEN } from \"../../../context/algolia-index.context\";\r\n\r\n@customElement(\"algolia-dashboard-overview\")\r\nexport class AlgoliaDashboardOverviewElement extends UmbElementMixin(LitElement) {\r\n    #algoliaIndexContext?: AlgoliaIndexContext;\r\n\r\n    @state()\r\n    private _loading = false;\r\n\r\n    @state()\r\n    private _indices: Array<IndexConfigurationModel> = [];\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(ALGOLIA_CONTEXT_TOKEN, (_instance) => {\r\n            this.#algoliaIndexContext = _instance;\r\n        });\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#getIndices();\r\n    }\r\n\r\n    async #getIndices() {\r\n        this._loading = true;\r\n\r\n        await this.#algoliaIndexContext?.getIndices()\r\n            .then(response => {\r\n                this._indices = response as Array<IndexConfigurationModel>;\r\n                this._loading = false;\r\n            })\r\n            .catch(error => this.#showError(error.message));\r\n    }  \r\n\r\n    async #onBuildIndex(index: IndexConfigurationModel) {\r\n        const modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n        const modalContext = modalManager.open(\r\n            this, UMB_CONFIRM_MODAL,\r\n            {\r\n                data: {\r\n                    headline: `Build Index : ${index.name}`,\r\n                    content: html`\r\n                      <p class=\"umb-alert umb-alert--warning mb2\">\r\n                        This will cause the index to be built.<br />\r\n                        Depending on how much content there is in your site this could take a while.<br />\r\n                        It is not recommended to rebuild an index during times of high website traffic\r\n                        or when editors are editing content.\r\n                      </p>`,\r\n                    color: \"danger\",\r\n                    confirmLabel: \"Ok\",\r\n                }\r\n            }\r\n        );\r\n        await modalContext.onSubmit().catch(() => undefined);\r\n\r\n        this._loading = true;\r\n\r\n        await this.#algoliaIndexContext?.buildIndex(index)\r\n            .then(response => {\r\n                var result = response as ResultModel;\r\n                if (result.success) {\r\n                    this.#showSuccess(\"Index built.\");\r\n                }\r\n                else {\r\n                    this.#showError(result.error);\r\n                }\r\n            })\r\n            .catch(error => this.#showError(error));\r\n\r\n        this._loading = false;\r\n    }\r\n\r\n    async #onDeleteIndex(index: IndexConfigurationModel) {\r\n        const modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n        const modalContext = modalManager.open(\r\n            this, UMB_CONFIRM_MODAL,\r\n            {\r\n                data: {\r\n                    headline: `Delete Index`,\r\n                    content: html`\r\n                      <p class=\"umb-alert umb-alert--warning mb2\">\r\n                        Are you sure you want to delete index <b>${index.name}</b>?\r\n                      </p>`,\r\n                    color: \"danger\",\r\n                    confirmLabel: \"Ok\",\r\n                }\r\n            }\r\n        );\r\n        modalContext?.onSubmit().catch((error) => this.#showError(error.message));\r\n\r\n        if (index == undefined || index.id == undefined) return;\r\n\r\n        this._loading = true;\r\n\r\n        await this.#algoliaIndexContext?.deleteIndex(index.id)\r\n            .then(response => {\r\n                var result = response as ResultModel;\r\n\r\n                if (result.success) {\r\n                    this.#getIndices();\r\n                    this.#showSuccess(\"Index deleted\");\r\n                }\r\n                else {\r\n                    this.#showError(result.error);\r\n                }\r\n\r\n            })\r\n            .catch(error => this.#showError(error));\r\n\r\n        this._loading = false;\r\n            \r\n    }\r\n\r\n    // notifications\r\n    async #showSuccess(message: string) {\r\n        const notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n        notificationContext?.peek(\"positive\", {\r\n            data: { message: message },\r\n        });\r\n    }\r\n\r\n    async #showError(message: string) {\r\n        const notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n        notificationContext?.peek(\"danger\", {\r\n            data: { message: message },\r\n        });\r\n    }\r\n\r\n    #renderIndicesList() {\r\n        if (this._indices.length == 0) return nothing;\r\n\r\n        return html`\r\n          <uui-table aria-label=\"Indices Table\" style=\"width: 70%\">\r\n            <uui-table-column style=\"width: 20%;\"></uui-table-column>\r\n            <uui-table-column style=\"width: 60%;\"></uui-table-column>\r\n            <uui-table-column style=\"width: 20%;\"></uui-table-column>\r\n\r\n            <uui-table-head>\r\n                <uui-table-head-cell>Name</uui-table-head-cell>\r\n                <uui-table-head-cell>Definition</uui-table-head-cell>\r\n                <uui-table-head-cell></uui-table-head-cell>\r\n            </uui-table-head>\r\n            ${this._indices.map((index) => {\r\n                return html`\r\n                <uui-table-row>\r\n                  <uui-table-cell>${index.name}</uui-table-cell>\r\n                  <uui-table-cell>\r\n                        ${index.contentData.map((contentData) => {\r\n                            return html`\r\n                                <uui-ref-node name=${contentData.name}\r\n                                            detail=${contentData.properties.map(obj => obj.name).join(', ')}>\r\n                                    <uui-icon slot=\"icon\" name=${contentData.icon}></uui-icon>\r\n                                </uui-ref-node>\r\n                                `;\r\n                })}\r\n                    \r\n                </uui-table-cell>\r\n                <uui-table-cell>\r\n                    <uui-action-bar>\r\n                        <uui-button label=\"edit\" look=\"default\" color=\"default\"\r\n                            @click=\"${() => window.history.pushState({}, '', window.location.href.replace(/\\/+$/, '') + '/index/' + index.id)}\">\r\n                            <uui-icon name=\"edit\"></uui-icon>\r\n                        </uui-button>\r\n                        <uui-button label=\"build\" look=\"default\" color=\"danger\" @click=\"${() => this.#onBuildIndex(index)}\">\r\n                            <uui-icon name=\"sync\"></uui-icon>\r\n                        </uui-button>\r\n                        <uui-button label=\"search\" look=\"default\" color=\"positive\" \r\n                            @click=\"${() => window.history.pushState({}, '', window.location.href.replace(/\\/+$/, '') + '/search/' + index.id)}\">\r\n                            <uui-icon name=\"search\"></uui-icon>\r\n                        </uui-button>\r\n                        <uui-button label=\"delete\" look=\"default\" color=\"default\" @click=\"${() => this.#onDeleteIndex(index)}\">\r\n                            <uui-icon name=\"delete\"></uui-icon>\r\n                        </uui-button>\r\n                    </uui-action-bar>\r\n                </uui-table-cell>\r\n                </uui-table-row>\r\n              `;\r\n            })}\r\n            </uui-table>\r\n        `;\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <uui-box headline=\"Algolia Indices\">\r\n            <div>\r\n                <h5>Manage Algolia Indices</h5>\r\n                <p>\r\n                    Algolia is an AI-powered search and discovery platform allowing you to create cutting-edge customer experiences for their websites or mobile apps.\r\n                    It's like the perfect mediator between your website and customers, making sure the conversation is as smooth and efficient as possible.\r\n                </p>\r\n                <p>\r\n                    The Algolia model provides Search as a Service through an externally hosted search engine, offering web search across the website based\r\n                    on the content payload pushed from the website to Algolia.\r\n                </p>\r\n                <p>\r\n                    To get started, you need to create an index and define the content schema - document types and properties.\r\n                    Then you can build your index, push data to Algolia and run searches across created indices.\r\n                    <br />\r\n                    <a style=\"text-decoration: underline\" target=\"_blank\" href=\"https://www.algolia.com/doc/guides/getting-started/quick-start/\">\r\n                        Read more about integrating Algolia Search\r\n                    </a>\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <uui-button look=\"primary\" color=\"default\" label=\"Add New Index Definition\" \r\n                @click=\"${() => window.history.pushState({}, '', window.location.href.replace(/\\/+$/, '') + '/index')}\"></uui-button>\r\n            </div>\r\n            ${this._loading ? html`<div class=\"center\"><uui-loader></uui-loader></div>` : ''}\r\n            ${this.#renderIndicesList()}\r\n            </uui-box>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n      .center {\r\n        display: grid;\r\n        place-items: center;\r\n      }\r\n      .error {\r\n        color: var(--uui-color-danger);\r\n      }\r\n    `,\r\n    ];\r\n}\r\n\r\nexport default AlgoliaDashboardOverviewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'algolia-dashboard-overview': AlgoliaDashboardOverviewElement\r\n    }\r\n}"],"names":["_algoliaIndexContext","_AlgoliaDashboardOverviewElement_instances","getIndices_fn","onBuildIndex_fn","onDeleteIndex_fn","showSuccess_fn","showError_fn","renderIndicesList_fn","AlgoliaDashboardOverviewElement","UmbElementMixin","LitElement","__privateAdd","ALGOLIA_CONTEXT_TOKEN","_instance","__privateSet","__privateMethod","html","_a","__privateGet","response","error","index","UMB_MODAL_MANAGER_CONTEXT","UMB_CONFIRM_MODAL","result","modalContext","message","notificationContext","UMB_NOTIFICATION_CONTEXT","nothing","contentData","obj","css","__decorateClass","state","customElement","AlgoliaDashboardOverviewElement$1"],"mappings":"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"}