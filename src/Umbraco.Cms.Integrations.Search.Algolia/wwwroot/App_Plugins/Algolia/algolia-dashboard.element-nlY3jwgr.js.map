{"version":3,"file":"algolia-dashboard.element-nlY3jwgr.js","sources":["../../../Client/src/dashboard/search-management-dashboard/algolia-dashboard.element.ts"],"sourcesContent":["import {\r\n    LitElement,\r\n    html,\r\n    customElement,\r\n    state,\r\n    nothing\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport type {\r\n    UmbRoute,\r\n    UmbRouterSlotChangeEvent,\r\n    UmbRouterSlotInitEvent\r\n} from \"@umbraco-cms/backoffice/router\";\r\n\r\nimport type { AlgoliaIndexElement } from \"./views/algolia-index.js\";\r\nimport type { AlgoliaSearchElement } from \"./views/algolia-search.js\";\r\n\r\n@customElement(\"algolia-dashboard-element\")\r\nexport class AlgoliaDashboardElement extends UmbElementMixin(LitElement) {\r\n\r\n    @state()\r\n    private _routes: UmbRoute[] = [\r\n        {\r\n            path: `/index/:indexId`,\r\n            component: () => import('./views/algolia-index.js'),\r\n            setup: (component, info) => {\r\n                const element = component as AlgoliaIndexElement;\r\n                element.indexId = info.match.params.indexId;\r\n            },\r\n        },\r\n        {\r\n            path: `/index`,\r\n            component: () => import('./views/algolia-index.js'),\r\n            setup: (component) => {\r\n                const element = component as AlgoliaIndexElement;\r\n                element.indexId = '';\r\n            },\r\n        },\r\n        {\r\n            path: `/search/:indexId`,\r\n            component: () => import('./views/algolia-search.js'),\r\n            setup: (component, info) => {\r\n                const element = component as AlgoliaSearchElement;\r\n                element.indexId = info.match.params.indexId;\r\n            },\r\n        },\r\n        {\r\n            path: ``,\r\n            component: () => import('./views/algolia-dashboard-overview.js'),\r\n        },\r\n    ];\r\n\r\n    @state()\r\n    private _routerPath?: string;\r\n\r\n    @state()\r\n    private _activePath = '';\r\n\r\n    render() {\r\n        return html`\r\n        <umb-body-layout header-transparent>\r\n            ${this.#renderHeader()}\r\n            <div id=\"main\">\r\n                <umb-router-slot\r\n                .routes=${this._routes}\r\n                @init=${(event: UmbRouterSlotInitEvent) => {\r\n                this._routerPath = event.target.absoluteRouterPath;\r\n            }}\r\n                @change=${(event: UmbRouterSlotChangeEvent) => {\r\n                this._activePath = event.target.localActiveViewPath || '';\r\n            }}></umb-router-slot>\r\n            </div>\r\n        </umb-body-layout>\r\n      `;\r\n    }\r\n\r\n    #renderHeader() {\r\n        return this._routerPath && this._activePath !== ''\r\n            ? html`\r\n\t\t\t\t\t<div id=\"header\" slot=\"header\">\r\n\t\t\t\t\t\t<a href=${this._routerPath}> &larr; Back to overview </a>\r\n\t\t\t\t\t</div>\r\n\t\t\t  `\r\n            : nothing;\r\n    }\r\n}\r\n\r\nexport default AlgoliaDashboardElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'algolia-dashboard-element': AlgoliaDashboardElement\r\n    }\r\n}"],"names":["_AlgoliaDashboardElement_instances","renderHeader_fn","AlgoliaDashboardElement","UmbElementMixin","LitElement","__privateAdd","component","info","element","html","__privateMethod","event","nothing","__decorateClass","state","customElement","AlgoliaDashboardElement$1"],"mappings":";;;;;;;;8OAAAA,GAAAC;AAkBO,IAAMC,IAAN,cAAsCC,EAAgBC,CAAU,EAAE;AAAA,EAAlE,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAL,CAAA,GAGH,KAAQ,UAAsB;AAAA,MAC1B;AAAA,QACI,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,6BAA0B;AAAA,QAClD,OAAO,CAACM,GAAWC,MAAS;AACxB,gBAAMC,IAAUF;AACR,UAAAE,EAAA,UAAUD,EAAK,MAAM,OAAO;AAAA,QACxC;AAAA,MACJ;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,6BAA0B;AAAA,QAClD,OAAO,CAACD,MAAc;AAClB,gBAAME,IAAUF;AAChB,UAAAE,EAAQ,UAAU;AAAA,QACtB;AAAA,MACJ;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,8BAA2B;AAAA,QACnD,OAAO,CAACF,GAAWC,MAAS;AACxB,gBAAMC,IAAUF;AACR,UAAAE,EAAA,UAAUD,EAAK,MAAM,OAAO;AAAA,QACxC;AAAA,MACJ;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,0CAAuC;AAAA,MACnE;AAAA,IAAA,GAOJ,KAAQ,cAAc;AAAA,EAAA;AAAA,EAEtB,SAAS;AACE,WAAAE;AAAA;AAAA,cAEDC,EAAA,MAAKV,MAAL,KAAoB,IAAA,CAAA;AAAA;AAAA;AAAA,0BAGR,KAAK,OAAO;AAAA,wBACd,CAACW,MAAkC;AACtC,WAAA,cAAcA,EAAM,OAAO;AAAA,IAAA,CACnC;AAAA,0BACa,CAACA,MAAoC;AAC1C,WAAA,cAAcA,EAAM,OAAO,uBAAuB;AAAA,IAAA,CAC1D;AAAA;AAAA;AAAA;AAAA,EAIT;AAWJ;AAnEOX,IAAA,oBAAA,QAAA;AA0DHC,IAAa,WAAG;AACZ,SAAO,KAAK,eAAe,KAAK,gBAAgB,KAC1CQ;AAAA;AAAA,gBAEE,KAAK,WAAW;AAAA;AAAA,SAGlBG;AACV;AA/DQC,EAAA;AAAA,EADPC,EAAM;AAAA,GAFEZ,EAGD,WAAA,WAAA,CAAA;AAgCAW,EAAA;AAAA,EADPC,EAAM;AAAA,GAlCEZ,EAmCD,WAAA,eAAA,CAAA;AAGAW,EAAA;AAAA,EADPC,EAAM;AAAA,GArCEZ,EAsCD,WAAA,eAAA,CAAA;AAtCCA,IAANW,EAAA;AAAA,EADNE,EAAc,2BAA2B;AAAA,GAC7Bb,CAAA;AAqEb,MAAAc,IAAed;"}